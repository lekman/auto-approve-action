name: Test Label Validation

on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize, labeled, unlabeled]
  push:
    paths:
      - 'scripts/validate-labels.sh'
      - 'action.yml'
      - '.github/workflows/test-label-validation.yml'

permissions:
  contents: read
  pull-requests: read
  issues: write  # Needed to create labels

jobs:
  test-unit-tests:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Install jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
      
      - name: Run label validation tests
        run: ./scripts/test-validate-labels.sh

  test-label-validation-pr:
    name: Test Label Validation on PR
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Test mode 'none' - should pass if no blocking labels
        uses: ./
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          allowed-authors: ${{ github.actor }}
          required-labels: 'do-not-merge,wip,blocked'
          label-match-mode: 'none'
      
      - name: Check existing labels
        id: check-labels
        run: |
          # Get current PR labels
          LABELS=$(gh pr view ${{ github.event.pull_request.number }} --json labels -q '.labels[].name' | tr '\n' ',' | sed 's/,$//')
          echo "Current labels: ${LABELS:-none}"
          echo "labels=$LABELS" >> $GITHUB_OUTPUT
          
          # Try to create a test label (may fail if no permissions)
          gh label create "test-auto-approve" --description "Test label for auto-approve CI" --color "0969da" 2>/dev/null || true
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true
      
      - name: Test mode 'any' - with dynamic label check
        if: steps.check-labels.outputs.labels != ''
        uses: ./
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          allowed-authors: ${{ github.actor }}
          required-labels: ${{ steps.check-labels.outputs.labels }},non-existent-label
          label-match-mode: 'any'
      
      - name: Test mode 'any' - skip if no labels
        if: steps.check-labels.outputs.labels == ''
        run: echo "Skipping 'any' mode test - PR has no labels"
      
      - name: Test mode 'all' - should fail without all labels
        id: test-all-fail
        continue-on-error: true
        uses: ./
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          allowed-authors: ${{ github.actor }}
          required-labels: 'test-label,approved,ready'
          label-match-mode: 'all'
      
      - name: Verify mode 'all' failed as expected
        if: steps.test-all-fail.outcome != 'failure'
        run: |
          echo "Expected mode 'all' to fail when not all labels are present"
          exit 1
      
      - name: Cleanup test labels
        if: always()
        run: |
          # Try to remove test label if it was added
          gh pr edit ${{ github.event.pull_request.number }} --remove-label "test-auto-approve" 2>/dev/null || true
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true

  test-label-edge-cases:
    name: Test Label Edge Cases
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Test with no required labels in 'none' mode
        uses: ./
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          allowed-authors: ${{ github.actor }}
          label-match-mode: 'none'
      
      - name: Test empty label validation
        id: test-empty-any
        continue-on-error: true
        uses: ./
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          allowed-authors: ${{ github.actor }}
          label-match-mode: 'any'
          # No required-labels provided
      
      - name: Verify empty label validation failed
        if: steps.test-empty-any.outcome != 'failure'
        run: |
          echo "Expected validation to fail when mode is 'any' but no labels specified"
          exit 1