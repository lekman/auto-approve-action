name: Auto Approve PR
description: Auto-approve PRs based on allow list, label requirements, and status check verification
inputs:
  github-token:
    description: "GitHub token with repo and PR write permissions"
    required: true
    default: ""
  allowed-authors:
    description: "Comma-separated list of GitHub usernames authorized to trigger auto-approval"
    required: true
    default: ""
  required-labels:
    description: "Comma-separated list of labels to validate against the PR"
    required: false
    default: ""
  label-match-mode:
    description: "Label matching mode: 'all', 'any', or 'none'"
    required: false
    default: "all"
  silent:
    description: "If true, suppress job summary output"
    required: false
    default: "false"
  dry-run:
    description: "If true, perform all checks but skip actual approval (test mode)"
    required: false
    default: "false"
  merge-method:
    description: "Method to use when auto-merging: 'merge', 'squash', or 'rebase'"
    required: false
    default: "merge"
  path-filters:
    description: "File path patterns for conditional approval (supports glob patterns and ! for exclusion)"
    required: false
    default: ""
  max-files-changed:
    description: "Maximum number of files that can be changed in the PR (0 = no limit)"
    required: false
    default: "0"
  max-lines-added:
    description: "Maximum number of lines that can be added in the PR (0 = no limit)"
    required: false
    default: "0"
  max-lines-removed:
    description: "Maximum number of lines that can be removed in the PR (0 = no limit)"
    required: false
    default: "0"
  max-total-lines:
    description: "Maximum total lines changed (added + removed) in the PR (0 = no limit)"
    required: false
    default: "0"
  size-limit-message:
    description: "Custom message to display when PR exceeds size limits"
    required: false
    default: "PR exceeds configured size limits"
runs:
  using: "composite"
  steps:
    - name: Validate Inputs
      shell: bash
      run: |
        "$ACTION_PATH/scripts/validate-inputs.sh"
      env:
        ACTION_PATH: ${{ github.action_path }}
        ALLOWED_AUTHORS: ${{ inputs.allowed-authors }}
        REQUIRED_LABELS: ${{ inputs.required-labels }}
        LABEL_MATCH_MODE: ${{ inputs.label-match-mode }}
        MERGE_METHOD: ${{ inputs.merge-method }}
        PATH_FILTERS: ${{ inputs.path-filters }}
        MAX_FILES_CHANGED: ${{ inputs.max-files-changed }}
        MAX_LINES_ADDED: ${{ inputs.max-lines-added }}
        MAX_LINES_REMOVED: ${{ inputs.max-lines-removed }}
        MAX_TOTAL_LINES: ${{ inputs.max-total-lines }}
    
    - name: Verify PR Author
      if: github.event_name == 'pull_request' || github.event_name == 'pull_request_target'
      shell: bash
      run: |
        "$ACTION_PATH/scripts/verify-author.sh"
      env:
        ACTION_PATH: ${{ github.action_path }}
        GITHUB_TOKEN: ${{ inputs.github-token }}
        ALLOWED_AUTHORS: ${{ inputs.allowed-authors }}
        PR_NUMBER: ${{ github.event.pull_request.number }}
    
    - name: Validate PR Labels
      if: github.event_name == 'pull_request' || github.event_name == 'pull_request_target'
      shell: bash
      run: |
        "$ACTION_PATH/scripts/validate-labels.sh"
      env:
        ACTION_PATH: ${{ github.action_path }}
        GITHUB_TOKEN: ${{ inputs.github-token }}
        REQUIRED_LABELS: ${{ inputs.required-labels }}
        LABEL_MATCH_MODE: ${{ inputs.label-match-mode }}
        PR_NUMBER: ${{ github.event.pull_request.number }}
    
    - name: Validate File Paths
      if: (github.event_name == 'pull_request' || github.event_name == 'pull_request_target') && inputs.path-filters != ''
      shell: bash
      run: |
        "$ACTION_PATH/scripts/validate-paths.sh"
      env:
        ACTION_PATH: ${{ github.action_path }}
        GITHUB_TOKEN: ${{ inputs.github-token }}
        PATH_FILTERS: ${{ inputs.path-filters }}
        PR_NUMBER: ${{ github.event.pull_request.number }}
    
    - name: Validate PR Size
      if: github.event_name == 'pull_request' || github.event_name == 'pull_request_target'
      shell: bash
      run: |
        "$ACTION_PATH/scripts/validate-size.sh"
      env:
        ACTION_PATH: ${{ github.action_path }}
        GITHUB_TOKEN: ${{ inputs.github-token }}
        PR_NUMBER: ${{ github.event.pull_request.number }}
        MAX_FILES_CHANGED: ${{ inputs.max-files-changed }}
        MAX_LINES_ADDED: ${{ inputs.max-lines-added }}
        MAX_LINES_REMOVED: ${{ inputs.max-lines-removed }}
        MAX_TOTAL_LINES: ${{ inputs.max-total-lines }}
        SIZE_LIMIT_MESSAGE: ${{ inputs.size-limit-message }}
    
    - name: Approve Pull Request
      if: github.event_name == 'pull_request' || github.event_name == 'pull_request_target'
      shell: bash
      run: |
        "$ACTION_PATH/scripts/approve-pr.sh"
      env:
        ACTION_PATH: ${{ github.action_path }}
        GITHUB_TOKEN: ${{ inputs.github-token }}
        GITHUB_REPOSITORY: ${{ github.repository }}
        GITHUB_ACTOR: ${{ github.actor }}
        PR_NUMBER: ${{ github.event.pull_request.number }}
        LABEL_MATCH_MODE: ${{ inputs.label-match-mode }}
        SILENT: ${{ inputs.silent }}
        DRY_RUN: ${{ inputs.dry-run }}
        MERGE_METHOD: ${{ inputs.merge-method }}
