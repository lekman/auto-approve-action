# This workflow is designed to use a GitHub App for authentication to allow PR creation and approval.
# Requires APP_ID and APP_PRIVATE_KEY to be set as repository secrets.

name: "Continuous Deployment"

on:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write
  packages: write
  actions: write
  checks: write

jobs:
  release:
    name: "Release Please"
    runs-on: ubuntu-latest
    # Only on default branch
    if: ${{ github.ref == 'refs/heads/main' }}
    permissions:
      contents: write
      pull-requests: write
      packages: write
      actions: write
      checks: write
    outputs:
      json: ${{ steps.show-outputs.outputs.json }}

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Generate GitHub App token
        id: app-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}

      - name: "Release Please"
        uses: googleapis/release-please-action@v4
        if: github.ref == 'refs/heads/main'
        id: release
        with:
          token: ${{ steps.app-token.outputs.token }}
          target-branch: ${{ github.ref_name}}
          config-file: .github/release-config.json
          manifest-file: .github/release-manifest.json
          pull-request-header: "chore: release action"

      - name: Show the outputs
        if: github.ref == 'refs/heads/main'
        id: show-outputs
        run: |
          output_json=$(echo '${{ toJson(steps.release.outputs) }}' | jq .)
          echo $output_json
          output_no_newlines=$(echo "$output_json" | tr -d '\n')
          echo "json=$output_no_newlines" >> $GITHUB_OUTPUT

      - name: Update major version tag (v${{ steps.release.outputs.major }})
        if: ${{ steps.release.outputs.release_created }}
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          git tag -d v${{ steps.release.outputs.major }} || true
          git push origin :v${{ steps.release.outputs.major }} || true
          git tag -a v${{ steps.release.outputs.major }} ${{ steps.release.outputs.sha }} -m "Release v${{ steps.release.outputs.major }}"
          git push origin v${{ steps.release.outputs.major }}
