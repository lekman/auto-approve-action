name: Test Expected Failures

on:
  workflow_dispatch:
  pull_request:
    types: [opened, synchronize]
  push:
    paths:
      - 'scripts/*.sh'
      - 'action.yml'
      - '.github/workflows/test-expected-failures.yml'

permissions:
  contents: read
  pull-requests: read
  checks: write

jobs:
  test-failed-checks-rejection:
    name: Test Rejection on Failed Checks
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Create a failing check
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });
            
            // Create a failed check
            await github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'Intentionally Failed Check',
              head_sha: pr.head.sha,
              status: 'completed',
              conclusion: 'failure',
              output: {
                title: 'Test Failed Check',
                summary: 'This check intentionally fails to test rejection behavior'
              }
            });
      
      - name: Test that approval is rejected due to failed check
        id: expect-failure
        continue-on-error: true
        uses: ./
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          allowed-authors: ${{ github.actor }}
          label-match-mode: 'none'
          wait-for-checks: 'true'
          max-wait-time: '0.5'  # 30 seconds
          required-checks: 'Intentionally Failed Check'
      
      - name: Verify the action failed as expected
        if: steps.expect-failure.outcome != 'failure'
        run: |
          echo "ERROR: Expected the action to fail due to failed check, but it succeeded"
          exit 1
      
      - name: Confirm test passed
        if: steps.expect-failure.outcome == 'failure'
        run: |
          echo "✅ Test passed: Action correctly rejected approval due to failed check"

  test-unauthorized-author-rejection:
    name: Test Rejection on Unauthorized Author
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Test that approval is rejected for unauthorized author
        id: expect-failure
        continue-on-error: true
        uses: ./
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          allowed-authors: 'non-existent-user-12345'
          label-match-mode: 'none'
          wait-for-checks: 'false'
      
      - name: Verify the action failed as expected
        if: steps.expect-failure.outcome != 'failure'
        run: |
          echo "ERROR: Expected the action to fail due to unauthorized author, but it succeeded"
          exit 1
      
      - name: Confirm test passed
        if: steps.expect-failure.outcome == 'failure'
        run: |
          echo "✅ Test passed: Action correctly rejected approval for unauthorized author"

  test-missing-required-label-rejection:
    name: Test Rejection on Missing Required Label
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Test that approval is rejected for missing required label
        id: expect-failure
        continue-on-error: true
        uses: ./
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          allowed-authors: ${{ github.actor }}
          required-labels: 'non-existent-required-label'
          label-match-mode: 'all'
          wait-for-checks: 'false'
      
      - name: Verify the action failed as expected
        if: steps.expect-failure.outcome != 'failure'
        run: |
          echo "ERROR: Expected the action to fail due to missing required label, but it succeeded"
          exit 1
      
      - name: Confirm test passed
        if: steps.expect-failure.outcome == 'failure'
        run: |
          echo "✅ Test passed: Action correctly rejected approval due to missing required label"

  test-timeout-rejection:
    name: Test Rejection on Timeout
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Test that approval times out waiting for non-existent check
        id: expect-failure
        continue-on-error: true
        uses: ./
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          allowed-authors: ${{ github.actor }}
          label-match-mode: 'none'
          wait-for-checks: 'true'
          max-wait-time: '0.1'  # 6 seconds
          required-checks: 'Non-Existent-Check-That-Will-Never-Complete'
      
      - name: Verify the action failed as expected
        if: steps.expect-failure.outcome != 'failure'
        run: |
          echo "ERROR: Expected the action to timeout, but it succeeded"
          exit 1
      
      - name: Confirm test passed
        if: steps.expect-failure.outcome == 'failure'
        run: |
          echo "✅ Test passed: Action correctly timed out waiting for checks"